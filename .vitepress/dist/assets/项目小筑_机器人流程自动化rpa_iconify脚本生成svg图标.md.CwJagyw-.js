import{_ as s,c as i,o as a,a5 as t}from"./chunks/framework.DDkfrFQE.js";const n="/palette/assets/%E4%BC%81.XU0_GSFt.png",y=JSON.parse('{"title":"iconify 脚本生成 svg 图标","description":"","frontmatter":{},"headers":[],"relativePath":"项目小筑/机器人流程自动化rpa/iconify脚本生成svg图标.md","filePath":"项目小筑/机器人流程自动化rpa/iconify脚本生成svg图标.md"}'),e={name:"项目小筑/机器人流程自动化rpa/iconify脚本生成svg图标.md"},l=t('<h1 id="iconify-脚本生成-svg-图标" tabindex="-1">iconify 脚本生成 svg 图标 <a class="header-anchor" href="#iconify-脚本生成-svg-图标" aria-label="Permalink to &quot;iconify 脚本生成 svg 图标&quot;">​</a></h1><h2 id="一、背景" tabindex="-1">一、背景 <a class="header-anchor" href="#一、背景" aria-label="Permalink to &quot;一、背景&quot;">​</a></h2><p>几十上百个图标资源，现在我有两个工程都需要引入它们，我又不想在每个工程目录中都导入这个图标文件夹，是否能做到只导入一个 json 文件就可以引用我自定义的图标库呢?</p><h2 id="二、解决办法" tabindex="-1">二、解决办法 <a class="header-anchor" href="#二、解决办法" aria-label="Permalink to &quot;二、解决办法&quot;">​</a></h2><p>iconify 官网：<a href="https://iconify.design/getting-started/" target="_blank" rel="noreferrer">https://iconify.design/getting-started/</a></p><p>使用 iconify/tools 写脚本将图标文件夹转换为 json 文件，用<code>unplugin icons</code> 读取此 json 文件就可以</p><blockquote><p>需要准备</p></blockquote><ul><li>一段源文件代码 meta.json，定义了每个 svg 的名字 <img src="'+n+`" alt="alt text"></li></ul><ul><li><p>一段 js 脚本 可仿照官网的来写 <a href="https://iconify.design/docs/libraries/tools/examples/export-svg.html" target="_blank" rel="noreferrer">Export all Iconify icons as SVG</a></p><p>先安装<code>npm install --save-dev @iconify/tools</code></p><p>导入：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;node:fs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;node:path&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { fileURLToPath } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;node:url&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Installation: npm install --save-dev @iconify/tools</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { SVG, blankIconSet, cleanupSVG, runSVGO } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@iconify/tools&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>关于 fileURLToPath、import.meta、path.dirname 等的用法，详见 js 栏目</p></li></ul>`,9),o=[l];function p(h,r,k,c,d,g){return a(),i("div",null,o)}const E=s(e,[["render",p]]);export{y as __pageData,E as default};
