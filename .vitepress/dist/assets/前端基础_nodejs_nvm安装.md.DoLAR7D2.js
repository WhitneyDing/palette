import{_ as a,c as e,o as n,a5 as s}from"./chunks/framework.DDkfrFQE.js";const o="/palette/assets/image.B7LfOyjH.png",x=JSON.parse('{"title":"nvm 安装","description":"","frontmatter":{},"headers":[],"relativePath":"前端基础/nodejs/nvm安装.md","filePath":"前端基础/nodejs/nvm安装.md"}'),t={name:"前端基础/nodejs/nvm安装.md"},i=s(`<h1 id="nvm-安装" tabindex="-1">nvm 安装 <a class="header-anchor" href="#nvm-安装" aria-label="Permalink to &quot;nvm 安装&quot;">​</a></h1><h2 id="一、本地安装-可以联网" tabindex="-1">一、本地安装（可以联网） <a class="header-anchor" href="#一、本地安装-可以联网" aria-label="Permalink to &quot;一、本地安装（可以联网）&quot;">​</a></h2><h3 id="_1、卸载本地-nodejs-确认-c-users-name-appdata-roaming-下面的-npm-npm-cache-卸载干净-还有-c-program-files-下的-nodejs-文件删掉" tabindex="-1">1、卸载本地 nodejs，确认 C:\\Users\\name\\AppData\\Roaming 下面的 npm/npm-cache 卸载干净，还有 C:\\Program Files 下的 nodejs 文件删掉 <a class="header-anchor" href="#_1、卸载本地-nodejs-确认-c-users-name-appdata-roaming-下面的-npm-npm-cache-卸载干净-还有-c-program-files-下的-nodejs-文件删掉" aria-label="Permalink to &quot;1、卸载本地 nodejs，确认 C:\\Users\\name\\AppData\\Roaming 下面的 npm/npm-cache 卸载干净，还有 C:\\Program Files 下的 nodejs 文件删掉&quot;">​</a></h3><h3 id="_2、下载安装【windows-版本】" tabindex="-1">2、下载安装【windows 版本】 <a class="header-anchor" href="#_2、下载安装【windows-版本】" aria-label="Permalink to &quot;2、下载安装【windows 版本】&quot;">​</a></h3><ul><li>github/oschina 中搜索：nvm-windows 。提示上 Gitee 下载 / 微众云盘下载地址</li><li>下载 nvm-setup.zip【nvm-noinstall.zip 本地尝试安装始终报拒绝访问注册表路径】</li><li>安装时使用默认指定路径，也可以自定义路径，需要确保路径中没有空格，确保路径所在文件夹为空文件夹</li></ul><h3 id="_3、用管理员权限打开-git-bash-推荐-powershell-cmd-设置-node-js-镜像" tabindex="-1">3、用管理员权限打开 git-bash（推荐）/powerShell/cmd，设置 node.js 镜像 <a class="header-anchor" href="#_3、用管理员权限打开-git-bash-推荐-powershell-cmd-设置-node-js-镜像" aria-label="Permalink to &quot;3、用管理员权限打开 git-bash（推荐）/powerShell/cmd，设置 node.js 镜像&quot;">​</a></h3><p><code>nvm node_mirror http://npm.taobao.org/mirrors/node/</code></p><h3 id="_4、设置-npm-镜像" tabindex="-1">4、设置 npm 镜像 <a class="header-anchor" href="#_4、设置-npm-镜像" aria-label="Permalink to &quot;4、设置 npm 镜像&quot;">​</a></h3><p><code>nvm npm_mirror https://npm.taobao.org/mirrors/npm/</code></p><h3 id="_5、安装指定版本号" tabindex="-1">5、安装指定版本号 <a class="header-anchor" href="#_5、安装指定版本号" aria-label="Permalink to &quot;5、安装指定版本号&quot;">​</a></h3><p><code>nvm install [node_version] // 例如：nvm install 10.16.1</code></p><h3 id="_6-其它命令" tabindex="-1">6.其它命令 <a class="header-anchor" href="#_6-其它命令" aria-label="Permalink to &quot;6.其它命令&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>nvm ls // 查看已安装 node 版本</span></span>
<span class="line"><span>nvm use [node_version] // 切换 node 版本</span></span>
<span class="line"><span>nvm --version // nvm 的版本</span></span></code></pre></div><h3 id="_7-问题" tabindex="-1">7.问题： <a class="header-anchor" href="#_7-问题" aria-label="Permalink to &quot;7.问题：&quot;">​</a></h3><ul><li>exit status 1：请用管理员权限打开 shell</li><li>exit status 145: the directory is not empty，卸载 nvm，重装时候确保所写路径文件夹为空</li><li>exit status 1/145 乱码，用 git-bash 执行命令，就可以看见非乱码的错误信息</li></ul><h2 id="二、离线安装" tabindex="-1">二、离线安装 <a class="header-anchor" href="#二、离线安装" aria-label="Permalink to &quot;二、离线安装&quot;">​</a></h2><h3 id="_1、卸载-nodejs" tabindex="-1">1、卸载 nodejs <a class="header-anchor" href="#_1、卸载-nodejs" aria-label="Permalink to &quot;1、卸载 nodejs&quot;">​</a></h3><h3 id="_2、离线安装-nvm-windows" tabindex="-1">2、离线安装 nvm-windows <a class="header-anchor" href="#_2、离线安装-nvm-windows" aria-label="Permalink to &quot;2、离线安装 nvm-windows&quot;">​</a></h3><h3 id="_3、将【本地联网安装】安装路径下-c-users-xxxxxx-appdata-roaming-nvm-版本文件-拷贝至离线安装的对应文件夹下" tabindex="-1">3、将【本地联网安装】安装路径下(C:\\Users\\xxxxxx\\AppData\\Roaming\\nvm)版本文件，拷贝至离线安装的对应文件夹下 <a class="header-anchor" href="#_3、将【本地联网安装】安装路径下-c-users-xxxxxx-appdata-roaming-nvm-版本文件-拷贝至离线安装的对应文件夹下" aria-label="Permalink to &quot;3、将【本地联网安装】安装路径下(C:\\Users\\xxxxxx\\AppData\\Roaming\\nvm)版本文件，拷贝至离线安装的对应文件夹下&quot;">​</a></h3><p><img src="`+o+'" alt="alt text"></p>',20),r=[i];function l(d,h,m,p,c,_){return n(),e("div",null,r)}const v=a(t,[["render",l]]);export{x as __pageData,v as default};
